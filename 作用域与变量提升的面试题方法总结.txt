（博客园 里有比较全的总结）  
   var a = 20;
     function fn(){
         alert(a);//20
         a = 30;
         alert(a);//30
     }
     fn();
     alert(a);//30

*************************************
//     var a = 20;
//     function fn(){
//         alert(a);//undefind
//         a = 30;
//         var a = 50;
//         alert(a);//50
//     }
//     fn();
//     alert(a); //20

同样都是a=30，，最后结果为什么不一样？？


1.有实参形参的情况：
	实参是简单类型的，函数内部修改了，不会影响外部
	实参是复合类型的，函数内部修改了，会影响外部，除非，重新赋址，此时不会影响外部。

        查找的顺序是，先找自己的，如果自己的变量是（undefined）的时候会往外找，
        -->找实参，-->找到父级,直到-->找到window

2.没有实参形参的情况：
	子集作用域有var a，就不会再找父级的a 。此时子集里的a=30，就不会改变父级的a。（简单类型和复合类型都适用）




////////////////////////////////////////////////////////////////////////////////////////////////////////


如果 变量是简单类型的，并且没有传参，有没有var之间的区别

     有var，子集是undefined，也不会往外找,下面修改的都是子集的a
     没有var，子集找不到，会找到父级，下面修改会影响父级的a


如果 变量是简单类型的，并且有传参，有没有var之间的区别

     有var，子集是undefined，会找参数，下面修改的都是子集的a
     没有var，子集找不到，会找参数，下面修改的都是子集的a


如果 变量是复合类型的，并且没有传参，有没有var之间的区别

     有var，子集是undefined，也不会往外找,下面修改的都是子集的a
     没有var，子集找不到，会找到父级，下面修改会影响父级的a

如果 变量是复合类型的，并且有传参
    
     有var，子集是undefined，会找参数，下面修改会影响父级的a
     没有var，子集找不到，会找参数，下面修改会影响父级的a，如果重新赋址了就不会影响父级的a


/////////////////////////////////////作用域与变量提升的面试题方法总结////////////////////////////////////////////////////
变量提升（预解析）：浏览器刚打开就会预先把带var 和 函数申明（function xx（）{ }）进行变量提升，var xx =undefined | xx=function xx（）{ }
作用域：全局作用域：window，局部作用域：函数体内。ES6中还有块的概念，块：是个花括号 { }   =>在函数申明被花括号包着的括号上方，打印函数是undefined
重名：如果var 了一个或多个变量，和一个或多个函数声明，重名了。此时可以看做（函数覆盖了var，后面的覆盖了前面的。）

1.没有参数的时候：看有没有var，或者函数申明（也就是说如果有变量提升，函数体内就变成私有变量了，函数体内修改了不会影响父级。）
		有，子集是undefined，也不会找父级，下面修改了（简单和复合类型）都不会影响父级。
		没有，子集找不到，会找到父级，下面修改了（简单和复合类型）都会影响父级。


2.有参数的时候：（有传参，函数体内就变成私有变量了，函数体内修改了 不会影响父级。除非用的同一个空间地址，也就是复合函数）
		子集找不到，或者是undefined，（有没有var，或者函数申明）都会找参数，简单类型修改了不会影响父级，复合类型修改了会影响父级，除非重新赋址了。










